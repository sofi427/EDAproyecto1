package proyecto1;

import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Scanner;

public class LectorFichero {

    private static LectorFichero miLector;

    private LectorFichero() {}

    public static LectorFichero getLector() {
        if (miLector == null) {
            miLector = new LectorFichero();
        }
        return miLector;
    }

    public HashMap<String, ArrayList<String>> leerPublicacionesYAutores(String nom) {
        HashMap<String, ArrayList<String>> publicacionesAutores = new HashMap<>();

        try (Scanner fichero = new Scanner(new FileReader(nom))) {
            while (fichero.hasNextLine()) {
                String linea = fichero.nextLine();
                String[] datos = linea.split(" # ");
                if (datos.length == 2) {
                    String idPublicacion = datos[0];
                    String idAutor = datos[1];
                    if (!publicacionesAutores.containsKey(idPublicacion))
                    {publicacionesAutores.put(idPublicacion, new ArrayList<>());}
                    publicacionesAutores.get(idPublicacion).add(idAutor);
                }
            }
        } catch (IOException e) {
            System.out.println("Error al leer " + nom);
        	e.printStackTrace();
        }

        return publicacionesAutores;
    }


    public HashMap<String, String> leerPublicacionesYTitulos(String nom) {
    	HashMap<String, String> publicacionesTitulos = new HashMap<>();
    	
    	try (Scanner fichero = new Scanner(new FileReader(nom))) {
            while (fichero.hasNextLine()) {
                String linea = fichero.nextLine();
                String[] datos = linea.split(" # ");
                if (datos.length == 2) {
                    String idPublicacion = datos[0];
                    String titulo = datos[1];
                    publicacionesTitulos.put(idPublicacion, titulo);
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
            System.out.println("Error al leer " + nom);
        }
    	return publicacionesTitulos;
    }

    public HashMap<String, ArrayList<String>> leerPublicacionesYCitas(String nom) {
    	HashMap<String, ArrayList<String>> publicacionesCitas = new HashMap<>();
    	
    	try (Scanner fichero = new Scanner(new FileReader(nom))) {
            while (fichero.hasNextLine()) {
                String linea = fichero.nextLine();
                String[] datos = linea.split(" # ");
                if (datos.length == 2) {
                    String idPublicacion = datos[0];
                    String idCita = datos[1];

                    if (!publicacionesCitas.containsKey(idPublicacion)) {
                        publicacionesCitas.put(idPublicacion, new ArrayList<>());
                    }
                    publicacionesCitas.get(idPublicacion).add(idCita);
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
            System.out.println("Error al leer " + nom);
        }
    	return publicacionesCitas;
    }

    public HashMap<String, String> leerAutoresYNombres(String nom) {
    	HashMap<String, String> autoresNombres = new HashMap<>();
    	
    	try (Scanner fichero = new Scanner(new FileReader(nom))) {
            while (fichero.hasNextLine()) {
                String linea = fichero.nextLine();
                String[] datos = linea.split(" # ");
                if (datos.length == 2) {
                    String idAutor = datos[0];
                    String nombre = datos[1];
                    autoresNombres.put(idAutor, nombre);
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
            System.out.println("Error al leer " + nom);
        }
    	return autoresNombres;
    }
}
